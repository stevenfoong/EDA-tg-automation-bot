services:
  input-telegram-bot:
    build: ./input-tg/
    container_name: input-telegram-bot
    hostname: input-telegram-bot
    environment:
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_PASS=${RABBITMQ_DEFAULT_PASS}
    depends_on:
      - rabbitmq
    restart: always
    networks:
      - chatops-network

  output-telegram-bot:
    build: ./output-tg/
    container_name: output-telegram-bot
    hostname: output-telegram-bot
    environment:
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_PASS=${RABBITMQ_DEFAULT_PASS}
    depends_on:
      - rabbitmq
    restart: always
    networks:
      - chatops-network

  bash-worker:
    build: ./bash-worker/
    container_name: bash-worker
    hostname: bash-worker
    environment:
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_PASS=${RABBITMQ_DEFAULT_PASS}
    depends_on:
      - rabbitmq
    restart: always
    networks:
      - chatops-network

  aws-worker:
    build: ./aws-worker/
    container_name: aws-worker
    hostname: aws-worker
    env_file:
      - ./aws-worker/.env
    environment:
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_PASS=${RABBITMQ_DEFAULT_PASS}
    depends_on:
      - rabbitmq
    restart: always
    networks:
      - chatops-network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    hostname: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
    ports:
      - "15672:15672"  # RabbitMQ Management UI
      - "5672:5672"    # RabbitMQ AMQP protocol
    networks:
      - chatops-network
    restart: always

networks:
  chatops-network:
    driver: bridge

